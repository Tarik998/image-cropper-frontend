services:
  database:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: image_cropper
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d image_cropper"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ../image-cropper-backend
    environment:
      NODE_ENV: production
      PORT: 5001
      DB_HOST: database
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: root
      DB_NAME: image_cropper
      CORS_ORIGIN: http://localhost:4200
      DB_SSL: "false"
    ports:
      - "5001:5001"
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - backend_uploads:/app/uploads
    restart: on-failure

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "4200:4200"
    depends_on:
      - backend
    volumes:
      - .:/app
      - /app/node_modules

volumes:
  postgres_data:
  backend_uploads: